
services:
  db:
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - task_app
    env_file:
      - source/.env
    ports:
      - "5432:5432"
  redis:
    image: "redis:alpine"
    volumes:
      - "redis_data:/data"
    networks:
      - task_app
    ports:
      - "6379:6379"
    env_file:
      - source/.env
  web:
    build:
      context: .
      dockerfile: DockerFile
    command: bash -c "cd source/ && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/home/app
    networks:
      - task_app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - source/.env

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - task_app
  celery:
    build:
      context: .
      dockerfile: DockerFile
    command: bash -c "cd source && celery -A base worker --loglevel=info"
    volumes:
      - .:/home/app
    networks:
      - task_app

    depends_on:
      - web
      - redis
      - rabbitmq
    env_file:
      - source/.env

  celery_beat:
    build:
      context: .
      dockerfile: DockerFile
    command: bash -c "cd source && celery -A base worker --loglevel=info"
    volumes:
      - .:/home/app
    networks:
      - task_app
    depends_on:
      - web
      - redis
      - rabbitmq
    env_file:
      - source/.env
  test:
    build:
      context: .
      dockerfile: DockerFile
    command: bash -c "cd source && python manage.py migrate && python manage.py test"
    volumes:
      - .:/home/app
    networks:
      - task_app
    depends_on:
      - db
      - redis
    env_file:
      - source/.env
networks:
  task_app:
volumes:
  postgres_data:
  redis_data:
